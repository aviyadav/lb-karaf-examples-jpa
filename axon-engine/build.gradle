
project.ext {
    bundleInportPackages = [
        'javax.persistence',
        'javax.transaction',
        'org.apache.felix.service.command',
        'org.apache.felix.gogo.commands',
        'org.apache.karaf.shell.console',
        'org.axonframework.eventstore.fs',
        'org.axonframework.eventhandling',
        'org.axonframework.common.jpa',
        'org.axonframework.eventstore.jpa',
        'org.axonframework.serializer.xml',
        'com.thoughtworks.xstream',
        'org.hibernate.proxy;resolution:=optional',
        'javassist.util.proxy;resolution:=optional',
        'org.xmlpull.v1',
        'com.hazelcast.config',
        'com.github.lburgazzoli.osgi',
        'com.github.lburgazzoli.osgi.hazelcast',
        'com.github.lburgazzoli.examples.axon',
        'com.github.lburgazzoli.examples.axon.helper',
        'com.github.lburgazzoli.examples.axon.serializer',
        'com.github.lburgazzoli.examples.axon.store',
        '*'
    ]

    bundleExportPackages = [
        '*'
    ]
}

dependencies {
    compile project(':osgi-commons')
    compile project(':osgi-hazelcast')
    compile project(':axon-commons')
}

jar {
    baseName = project.name

    manifest {
        classesDir = new File("$buildDir/classes/main")
        classpath  = project.runtimeClasspath

        instruction 'Import-Package' , bundleInportPackages.join(',')
        instruction 'Export-Package' , bundleExportPackages.join(',')

        attributes(
            'Bundle-Description'     : "${project.prefix} :: ${project.name}",
            'Bundle-Name'            : "${project.prefix} :: ${project.name}",
            'Bundle-SymbolicName'    : project.name,
            'Bundle-Version'         : project.version,
            'Implementation-Title'   : "${project.prefix}-${project.name}-${project.version}",
            'Implementation-Version' : project.version,
            'JPA-PersistenceUnits'   : 'AXON_PU',
            'Meta-Persistence'       : 'META-INF/persistence.xml'
        )
    }
}
